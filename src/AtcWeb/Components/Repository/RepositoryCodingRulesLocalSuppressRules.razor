@using Atc.Data.Models
@using AtcWeb.State

@if (StateContainer is not null)
{
    @if (LocalSuppressRules.Count > 0)
    {
        if (LocalSuppressRules.Count > 5)
        {
            <MudText Typo="Typo.body2"
                     Class="my-0"
                     Color="Color.Inherit">
                <i>@LocalSuppressRules.Count local suppress rules.</i>
            </MudText>
        }

        <table class="atc-simple-table-clean table-no-padding">
            @foreach (var suppressRule in LocalSuppressRules)
            {
                <tr>
                    <td style="vertical-align: top; padding-right: 12px !important;">@suppressRule.Key</td>
                    <td>
                        @if (string.IsNullOrEmpty(suppressRule.Value) ||
                             suppressRule.Value.Length < 5 ||
                             suppressRule.Value.StartsWith(suppressRule.Key, StringComparison.OrdinalIgnoreCase))
                        {
                            <MudText Typo="Typo.body2"
                                     Class="my-0"
                                     Color="Color.Warning">
                                @suppressRule.Value
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2"
                                     Class="my-0"
                                     Color="Color.Inherit">
                                @suppressRule.Value
                            </MudText>
                        }
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <MudText Typo="Typo.body2"
                 Class="my-0"
                 Color="Color.Inherit">
            <i>No local suppress rules.</i>
        </MudText>
    }
}

@code {

    [Inject]
    private StateContainer? StateContainer { get; set; }

    [Parameter]
    public List<KeyValueItem> LocalSuppressRules { get; set; } = new List<KeyValueItem>();

}